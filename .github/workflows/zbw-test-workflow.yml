name: ZBW Test Workflow
run-name: Testing out GitHub Actions ðŸš€
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - name: GitHub workspace
        run: echo "$GITHUB_WORKSPACE"

      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Print out all branches
        run: git branch

      - name: Print out GITHUB.REF
        run: echo "${GITHUB_REF}"

      - name: Print git log
        run: git log --oneline | head -n5

      - name: Git show
        run: git show

      - name: rev-parse
        run: git rev-parse HEAD^

      - name: SHA Info
        run: |
          head_sha=${{ github.event.pull_request.head.sha }}
          merge_sha=${{ github.sha }}
          latest_base_sha=$(git rev-parse HEAD^)
          echo "head: ${head_sha}"
          echo "lastest_base: ${lastest_base}"
          echo "merge: ${merge_sha}"

      - name: Acquire SHAs for latest base and head
        id: acquire_shas
        run: |
          echo "lastest_base_sha=${git rev-parse HEAD^}}" >> $GITHUB_OUTPUT
          echo "head_sha=${git rev-parse HEAD}" >> $GITHUB_OUTPUT

      - name: Read SHAs
        run: echo ${{ steps.acquire_shas.outputs.latest_base_sha}}
          echo ${{ steps.acquire_shas.outputs.head_sha}}

      - name: Git show HEAD
        run: git show HEAD

      #- name: Git show HEAD^
      #  run: git show HEAD^

      #- name: Git show HEAD^2
      #  run: git show HEAD^2

      # - name: Diffing
      #   id: yoyo
      #   run: |
      #     #if git diff --name-only HEAD^ HEAD | grep -E '(spec|test)\.tsx'; then
      #     if git diff --name-only HEAD^ HEAD | grep -E '\.yml'; then
      #       tests=($(git diff --name-only HEAD^ HEAD | grep -E '\.yml'))
      #       echo "::set-output name=tests::${tests[@]}"
      #     else
      #       echo "No tests included in the PR."
      #       exit 1
      #     fi

      # - name: View output
      #   run: |
      #     echo "${{ steps.yoyo.outputs.tests }}"

      - name: Full Context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Running script
        run: ./.github/workflows/script.sh
